name: release

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*'

jobs:
  on-tags:
    name: Create Release
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  on-release:
    name: publish
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
      - name: Publish Package
        run: |
          echo "${{github.release.tag_name}}"

#  build:
#    if: github.event_name == 'release'
#    name: release ${{ matrix.target }} (with non-required env)
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - target: x86_64-pc-windows-gnu
#            archive: zip
#          - target: x86_64-unknown-linux-musl
#            archive: tar.gz
#          - target: x86_64-apple-darwin
#            archive: zip
#          - target: wasm32-wasi
#            archive: zip tar.gz
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@master
#      - name: Compile and release
#        uses: rust-build/rust-build.action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          RUSTTARGET: ${{ matrix.target }}
#          ARCHIVE_TYPES: ${{ matrix.archive }}
#          MINIFY: "yes"